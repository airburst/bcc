// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Example {
  id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt         DateTime @default(now())

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  mobile        String?
  emergency     String?
  role          Role           @default(USER)
  accounts      Account[]
  sessions      Session[]
  rides         UsersOnRides[] @relation("usersOnRides_user")
  preferences   Json?
  createdAt     DateTime       @default(now())

  @@index(email)
}

model Ride {
  id          String         @id @default(cuid())
  name        String
  group       String?
  date        DateTime
  destination String?
  distance    Int?
  meetPoint   String?
  route       String?
  leader      String?
  notes       String?        @db.Text
  speed       Int?
  users       UsersOnRides[] @relation("usersOnRides_ride")
  deleted     Boolean        @default(false)
  cancelled   Boolean        @default(false)
  createdAt   DateTime       @default(now())

  @@index([date, deleted])
}

model UsersOnRides {
  ride      Ride     @relation("usersOnRides_ride", fields: [rideId], references: [id])
  rideId    String // relation scalar field (used in the `@relation` attribute above)
  user      User     @relation("usersOnRides_user", fields: [userId], references: [id])
  userId    String // relation scalar field (used in the `@relation` attribute above)
  notes     String?  @db.Text
  createdAt DateTime @default(now())

  @@id([rideId, userId])
  @@index([userId])
  @@index([rideId])
}

enum Role {
  USER
  LEADER
  ADMIN
  ANONYMOUS
}
